#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Jun 20, 2018 12:50:04 AM


import sys
import cv2
import PIL.Image
import wb_Camera
import wb_ui
try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

isCameraOpen = False

def Btn_Detect():
    print('wb_ui_support.Btn_Detect')
    sys.stdout.flush()

def Btn_HaveyDuty():
    print('wb_ui_support.Btn_HaveyDuty')
    sys.stdout.flush()

def Btn_Normal():
    print('wb_ui_support.Btn_Normal')
    sys.stdout.flush()

def Btn_Quick():
    print('wb_ui_support.Btn_Quick')
    sys.stdout.flush()

def Btn_Start():
    print('.................................wb_ui_support.Btn_Start..............................')

    cv_capture = cv2.VideoCapture()
    print('0:.....')
    print(isCameraOpen['isOpen'])
    if (isCameraOpen['isOpen']):
        w.TButton1.configure(text='''Start''')
        cv_capture.release()
        cv2.destroyAllWindows()
        isCameraOpen['isOpen']= False

        print('1:.....')
        print(isCameraOpen['isOpen'])
        return
    else :
        w.TButton1.configure(text='''Stop''')
        cv_capture = cv2.VideoCapture()
        cv_capture.open(0)  # have to use whatever your camera id actually is

        setattr(root, 'quit_flag', False)
        def set_quit_flag():
            root.quit_flag = True
        root.protocol('WM_DELETE_WINDOW', set_quit_flag)  # avoid errors on exit

        root.after(0, func=lambda: wb_Camera.update_all(root, w.ImageView, cv_capture))
        isCameraOpen['isOpen']= True
        print('2:.....')
        print(isCameraOpen['isOpen'])
        # root.mainloop()


    sys.stdout.flush()

def Btn_StartWash():
    print('wb_ui_support.Btn_StartWash')
    sys.stdout.flush()

def Btn_TakePhoto():
    print('wb_ui_support.Btn_TakePhoto')
    sys.stdout.flush()

def Btn_Wool():
    print('wb_ui_support.Btn_Wool')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):

    global w, top_level, root,isCameraOpen
    isCameraOpen = {'isOpen': False}

    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import wb_ui
    wb_ui.vp_start_gui()
